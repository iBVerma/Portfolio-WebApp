{"version":3,"sources":["components/Sidebar/styles.js","components/Sidebar/Sidebar.js","components/Sidebar/index.js","components/UserHeader/styles.js","components/UserHeader/index.js","components/UserHeader/UserHeader.js","components/MobileNav/styles.js","components/MobileNav/index.js","components/MobileNav/MobileNav.js","components/Layout/styles.js","components/Layout/index.js","components/Layout/Layout.js","styles.js","pages/Me/styles.js","pages/Me/index.js","pages/Me/Me.js","pages/Projects/styles.js","pages/Projects/index.js","pages/Projects/Projects.js","pages/Education/styles.js","pages/Education/index.js","pages/Education/Education.js","pages/index.js","App.js","serviceWorker.js","index.js"],"names":["StyledSideNav","styled","SideNav","items","name","path","Sidebar","location","useLocation","isFixedNav","expanded","isChildOfHeader","map","i","isActive","pathname","element","Link","to","HeaderContainer","div","isHome","Header","Image","img","ViewResumeLink","a","UserHeader","user","src","basics","picture","href","username","target","rel","label","region","yearsOfExperience","headline","blog","Container","Spacer","NavWrapper","NavLink","NavButton","Button","MobileNav","hasIconOnly","renderIcon","User32","iconDescription","tooltiPosition","Code32","tooltipPosition","Education32","StyledContent","Content","Layout","children","SectionTitle","h3","Paragraph","p","Pill","span","blue","ProfileLink","li","Me","summary","skills","skill","profiles","profile","url","network","ProjectItem","white","ProjectTitle","h4","SkillContainer","Projects","projects","project","languages","libraries","item","j","EducationItem","Institution","Degree","Education","education","position","studyType","area","start","year","end","description","replace","Pages","exact","App","useState","setUser","useEffect","fetch","then","res","json","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7784d269.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport {SideNav} from 'carbon-components-react/lib/components/UIShell'\r\n\r\n\r\nexport const StyledSideNav = styled(SideNav)`\r\n    @media (max-width: 640px){\r\n        display: none;\r\n    }\r\n`","import React from \"react\";\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport {SideNavItems, SideNavLink} from 'carbon-components-react/lib/components/UIShell';\r\nimport{StyledSideNav} from './styles';\r\n\r\nconst items = [\r\n    { name: 'Me', path: '/'},\r\n    { name: 'Projects', path: '/projects' },\r\n    { name: 'Education', path: '/education' },\r\n];\r\n\r\nconst Sidebar = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <StyledSideNav isFixedNav expanded isChildOfHeader = {false} aria-label=\"Side navigation\">\r\n            <SideNavItems>\r\n                {items.map(i => (\r\n                    <SideNavLink\r\n                        isActive={\r\n                            location.pathname === '/' && i.path === '/' ? true : location.pathname === i.path\r\n                        }\r\n                        element={Link}\r\n                        to = {i.path}\r\n                        key = {i.name}\r\n                    >\r\n                        {i.name}\r\n                    </SideNavLink>\r\n                ))}\r\n            </SideNavItems>\r\n        </StyledSideNav>\r\n    );\r\n\r\n};\r\n\r\nexport default Sidebar;","import Sidebar from \"./Sidebar\"\r\nexport default Sidebar\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderContainer = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media(maax-width:640px){\r\n        display: ${({isHome}) => (!isHome ? 'none' : 'flex')};\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  \r\n  @media (max-width: 640px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 200px;\r\n  margin-right: 1rem;\r\n  border-radius: 2px;\r\n`;\r\n\r\nexport const ViewResumeLink = styled.a`\r\n  display: flex;\r\n  text-decoration: none;\r\n  padding: 0.75rem 1.5rem;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  margin-top: 1rem;\r\n  border: 2px solid #2ecc40;\r\n  background-color: rgba(46, 204, 64, 0.3);\r\n  transition: background-color 250ms ease;\r\n  &:hover {\r\n    background-color: #2ecc40;\r\n  }\r\n  svg {\r\n    fill: white;\r\n    margin-left: 8px;\r\n  }\r\n`;","import UserHeader from './UserHeader';\r\nexport default UserHeader\r\n","import React from \"react\";\r\nimport{useLocation} from 'react-router-dom';\r\nimport {ArrowRight16} from '@carbon/icons-react';\r\n\r\n\r\nimport {HeaderContainer,Header, Image, ViewResumeLink } from './styles';\r\n\r\nconst UserHeader = ({user}) =>{\r\n    const location = useLocation();\r\n\r\n    return(\r\n        <HeaderContainer isHome={location.pathname === '/'}>\r\n            <Header>\r\n                <Image src={user.basics.picture} />\r\n                <div>\r\n                    <h2>{user.basics.name}</h2>\r\n                    <h4>\r\n                        <a\r\n                        href={`https://gitconnected.com/${user.basics.username}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer noopener\"\r\n                        >\r\n                            @{user.basics.username}\r\n                        </a>\r\n                    </h4>\r\n                    <p>{user.basics.label}</p>\r\n                    <p>Living in {user.basics.region}</p>\r\n                    <p>{user.basics.yearsOfExperience} years of experience as a developer</p>\r\n                    <p>{user.basics.headline}</p>\r\n                    <p>\r\n                        Blog:{' '}\r\n                        <a href={user.basics.blog} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                        {user.basics.blog}\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n            </Header>\r\n            <div>\r\n                <ViewResumeLink\r\n                    href={`https://gitconnected.com/${user.basics.username}/resume`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    <span>View Resume</span>\r\n                    <ArrowRight16 />\r\n                </ViewResumeLink>\r\n            </div>\r\n        </HeaderContainer> \r\n    );\r\n};\r\n\r\nexport default UserHeader;","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from 'carbon-components-react/lib/components/Button';\r\n\r\n\r\nexport const Container = styled.div`\r\n    display: none;\r\n\r\n    @media (max-width: 640px){\r\n        display: block;\r\n    }\r\n    \r\n`;\r\n\r\nexport const Spacer = styled.div`\r\n    height: 48px;\r\n`;\r\n\r\nexport const NavWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    position: fixed;\r\n    width: 100vw;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n    width: 25%;\r\n`;\r\n\r\nexport const NavButton = styled(Button)`\r\n    width: 100%;\r\n    justify-content: center;\r\n`;","import MobileNav from \"./MobileNav\"\r\nexport default MobileNav","import React from 'react'\r\nimport {User32, Code32,Education32 } from '@carbon/icons-react'\r\n\r\nimport {Container, Spacer, NavWrapper, NavButton , NavLink } from './styles'\r\n\r\nconst MobileNav = () => {\r\n    return (\r\n        <Container>\r\n            <Spacer/>\r\n            <NavWrapper>\r\n                <NavLink to=\"/\">\r\n                    <NavButton\r\n                        hasIconOnly\r\n                        renderIcon = {User32}\r\n                        iconDescription = \"Me\"\r\n                        tooltiPosition = \"bottom\"\r\n                    />\r\n                </NavLink>\r\n                <NavLink to=\"/projects\">\r\n                    <NavButton\r\n                        hasIconOnly\r\n                        renderIcon = {Code32}\r\n                        iconDescription = \"Projects\"\r\n                        tooltipPosition = \"bottom\"\r\n                    />\r\n                </NavLink>\r\n                <NavLink to=\"/education\">\r\n                    <NavButton\r\n                        hasIconOnly\r\n                        renderIcon={Education32}\r\n                        iconDescription=\"Education\"\r\n                        tooltipPosition=\"bottom\"\r\n                    />\r\n                </NavLink>\r\n            </NavWrapper>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\nexport default MobileNav","import styled from 'styled-components'\r\nimport {Content } from 'carbon-components-react/lib/components/UIShell'\r\n\r\nexport const StyledContent = styled(Content)`\r\n    min-height: 100vh;\r\n\r\n    @media (max-width: 640px){\r\n        margin-left: 0 !important;\r\n    }\r\n`","import Layout from './Layout'\r\nexport default Layout\r\n","import React from 'react';\r\nimport Sidebar from '../Sidebar';\r\nimport UserHeader from '../UserHeader';\r\nimport MobileNav from '../MobileNav';\r\n\r\nimport {StyledContent } from './styles';\r\n\r\nconst Layout = ({user,children}) => {\r\n    return (\r\n        <>\r\n            <MobileNav />\r\n            <Sidebar />\r\n            <StyledContent>\r\n                <UserHeader user = {user} />\r\n                <div>{children}</div>\r\n            </StyledContent>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default Layout;","import styled from 'styled-components';\r\nimport { blue } from '@carbon/colors';\r\n\r\nexport const SectionTitle = styled.h3`\r\n  margin-top: 1.5rem;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nexport const Pill = styled.span`\r\n  display: inline-block;\r\n  margin-right: 0.75rem;\r\n  margin-bottom: 0.75rem;\r\n  padding: 0.5rem 1rem;\r\n  background-color: ${blue[20]};\r\n  color: ${blue[70]};\r\n  border-radius: 2px;\r\n  font-weight: bold;\r\n`;","import styled from 'styled-components'\r\n\r\nexport const ProfileLink = styled.li`\r\n  margin-right: 0.5rem;\r\n  margin-bottom: 0.5rem;\r\n  display: inline-block;\r\n  font-size: 18px;\r\n`","import Me from './Me'\r\nexport default Me","import React from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { SectionTitle, Paragraph, Pill } from '../../styles';\r\nimport { ProfileLink } from './styles';\r\n\r\nconst Me = ({ user }) => {\r\n  return (\r\n    <Layout user={user}>\r\n      <div>\r\n        <SectionTitle>About Me</SectionTitle>\r\n        <Paragraph>{user.basics.summary}</Paragraph>\r\n      </div>\r\n      <div>\r\n        <SectionTitle>Skills</SectionTitle>\r\n        <div>\r\n          {user.skills.map(skill => (\r\n            <Pill key={skill.name}>{skill.name}</Pill>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <SectionTitle>Profiles</SectionTitle>\r\n        <ul>\r\n          {user.basics.profiles.map((profile, i) => (\r\n            <ProfileLink key={profile.network}>\r\n              {i !== 0 && ' | '}\r\n              <a href={profile.url} target=\"_blank\" rel=\"noreferrer noopener\">\r\n                {profile.network}\r\n              </a>\r\n            </ProfileLink>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Me;","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const ProjectItem = styled.li`\r\n  margin-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const ProjectTitle = styled.h4`\r\n  font-weight: bold;\r\n`\r\n\r\nexport const SkillContainer = styled.div`\r\n  margin-top: 1.2rem;\r\n`","import Projects from './Projects'\r\nexport default Projects","import React from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { SectionTitle, Pill } from '../../styles';\r\nimport { ProjectItem, ProjectTitle, SkillContainer } from './styles';\r\n\r\nconst Projects = ({ user }) => {\r\n  return (\r\n    <Layout user={user}>\r\n      <div>\r\n        <SectionTitle>Projects</SectionTitle>\r\n        <ul>\r\n          {user.projects.map((project, i) => (\r\n            <ProjectItem key={i}>\r\n              <ProjectTitle>{project.name}</ProjectTitle>\r\n              <p>{project.summary}</p>\r\n              <SkillContainer>\r\n                {[...project.languages, ...project.libraries].map((item, j) => (\r\n                  <Pill key={j}>{item}</Pill>\r\n                ))}\r\n              </SkillContainer>\r\n            </ProjectItem>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Projects;","import styled from 'styled-components'\r\nimport { white } from '@carbon/colors'\r\n\r\nexport const EducationItem = styled.li`\r\n  margin-top: 1rem;\r\n  padding-bottom: 1rem;\r\n  border-bottom: 1px solid ${white};\r\n`\r\n\r\nexport const Institution = styled.h4`\r\n  font-weight: bold;\r\n`\r\n\r\nexport const Degree = styled.p`\r\n  font-weight: bold;\r\n  display: inline-block;\r\n`","import Education from './Education'\r\nexport default Education","import React from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport { SectionTitle, Paragraph } from '../../styles';\r\nimport { EducationItem, Institution, Degree } from './styles';\r\n\r\nconst Education = ({ user }) => {\r\n  return (\r\n    <Layout user={user}>\r\n      <div>\r\n        <SectionTitle>Education</SectionTitle>\r\n        <ul>\r\n          {user.education.map((education, i) => (\r\n            <EducationItem key={i}>\r\n              <Institution>{education.position}</Institution>\r\n              <div>\r\n                <Degree>\r\n                  {education.studyType}, {education.area}\r\n                </Degree>{' '}\r\n                <span> &sdot; </span>\r\n                <span>\r\n                  {education.start.year} to {education.end.year}\r\n                </span>\r\n              </div>\r\n              <Paragraph>{education.description.replace('\\n\\n', '\\n')}</Paragraph>\r\n            </EducationItem>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Education;","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Me from './Me';\r\nimport Projects from './Projects';\r\nimport Education from './Education';\r\n\r\nconst Pages = ({ user }) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Me user={user} />\r\n        </Route>\r\n        <Route path=\"/projects\">\r\n          <Projects user={user} />\r\n        </Route>\r\n        <Route path=\"/education\">\r\n          <Education user={user} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Pages;","import React, {useState, useEffect} from \"react\";\nimport Pages from './pages';\n\n\nfunction App() {\n  const [user,setUser] = useState(null);\n  useEffect(() => {\n    fetch('https://gitconnected.com/v1/portfolio/iBVerma')\n      .then(res =>res.json())\n      .then(user => {\n        setUser(user);\n      });\n  }, []);\n\n  if(!user){\n    return <div />;\n  }\n\n  return <Pages user = {user} />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}